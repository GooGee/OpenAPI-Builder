{
    "version": 2,
    "layerManager": {
        "nextUI": 6,
        "list": [
            {
                "un": "/path +get",
                "_ui": 1,
                "color": "",
                "description": "",
                "unPattern": "/${schema.snakeCase}",
                "suffix": "",
                "operationManager": {
                    "nextUI": 2,
                    "list": [
                        {
                            "un": "get",
                            "_ui": 1,
                            "requestBody": {
                                "un": "",
                                "_ui": 0,
                                "unPattern": "",
                                "useExisted": false,
                                "mtManager": {
                                    "nextUI": 1,
                                    "list": []
                                },
                                "reference": {
                                    "_ui": 0,
                                    "type": "requestBodies"
                                },
                                "schema": {
                                    "un": "",
                                    "_ui": 0,
                                    "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                    "script": {
                                        "_ui": 0,
                                        "type": "script"
                                    }
                                }
                            },
                            "statusManager": {
                                "nextUI": 2,
                                "list": [
                                    {
                                        "un": "200",
                                        "_ui": 1,
                                        "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                        "useExisted": false,
                                        "mtManager": {
                                            "nextUI": 2,
                                            "list": [
                                                {
                                                    "un": "application/json",
                                                    "_ui": 1
                                                }
                                            ]
                                        },
                                        "reference": {
                                            "_ui": 0,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "${schema.un}_Response_${operation.un + path.suffix}",
                                            "script": {
                                                "_ui": 21,
                                                "type": "script"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "un": "/path +post",
                "_ui": 2,
                "color": "",
                "description": "",
                "unPattern": "/${schema.snakeCase}",
                "suffix": "",
                "operationManager": {
                    "nextUI": 2,
                    "list": [
                        {
                            "un": "post",
                            "_ui": 1,
                            "requestBody": {
                                "un": "",
                                "_ui": 0,
                                "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                "useExisted": false,
                                "mtManager": {
                                    "nextUI": 2,
                                    "list": [
                                        {
                                            "un": "application/json",
                                            "_ui": 1
                                        }
                                    ]
                                },
                                "reference": {
                                    "_ui": 0,
                                    "type": "requestBodies"
                                },
                                "schema": {
                                    "un": "",
                                    "_ui": 0,
                                    "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                    "script": {
                                        "_ui": 12,
                                        "type": "script"
                                    }
                                }
                            },
                            "statusManager": {
                                "nextUI": 5,
                                "list": [
                                    {
                                        "un": "200",
                                        "_ui": 1,
                                        "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                        "useExisted": false,
                                        "mtManager": {
                                            "nextUI": 2,
                                            "list": [
                                                {
                                                    "un": "application/json",
                                                    "_ui": 1
                                                }
                                            ]
                                        },
                                        "reference": {
                                            "_ui": 0,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "${schema.un}_Response_${operation.un + path.suffix}",
                                            "script": {
                                                "_ui": 22,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "400",
                                        "_ui": 2,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 2,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "401",
                                        "_ui": 3,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 3,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "403",
                                        "_ui": 4,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 4,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "un": "/path/{id} +delete",
                "_ui": 3,
                "color": "",
                "description": "",
                "unPattern": "/${schema.snakeCase}/{id}",
                "suffix": "_1",
                "operationManager": {
                    "nextUI": 2,
                    "list": [
                        {
                            "un": "delete",
                            "_ui": 1,
                            "requestBody": {
                                "un": "",
                                "_ui": 0,
                                "unPattern": "",
                                "useExisted": false,
                                "mtManager": {
                                    "nextUI": 1,
                                    "list": []
                                },
                                "reference": {
                                    "_ui": 0,
                                    "type": "requestBodies"
                                },
                                "schema": {
                                    "un": "",
                                    "_ui": 0,
                                    "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                    "script": {
                                        "_ui": 0,
                                        "type": "script"
                                    }
                                }
                            },
                            "statusManager": {
                                "nextUI": 6,
                                "list": [
                                    {
                                        "un": "200",
                                        "_ui": 1,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 1,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "400",
                                        "_ui": 2,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 2,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "401",
                                        "_ui": 3,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 3,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "403",
                                        "_ui": 4,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 4,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "404",
                                        "_ui": 5,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 5,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "un": "/path/{id} +get",
                "_ui": 4,
                "color": "",
                "description": "",
                "unPattern": "/${schema.snakeCase}/{id}",
                "suffix": "_1",
                "operationManager": {
                    "nextUI": 2,
                    "list": [
                        {
                            "un": "get",
                            "_ui": 1,
                            "requestBody": {
                                "un": "",
                                "_ui": 0,
                                "unPattern": "",
                                "useExisted": false,
                                "mtManager": {
                                    "nextUI": 1,
                                    "list": []
                                },
                                "reference": {
                                    "_ui": 0,
                                    "type": "requestBodies"
                                },
                                "schema": {
                                    "un": "",
                                    "_ui": 0,
                                    "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                    "script": {
                                        "_ui": 0,
                                        "type": "script"
                                    }
                                }
                            },
                            "statusManager": {
                                "nextUI": 3,
                                "list": [
                                    {
                                        "un": "200",
                                        "_ui": 1,
                                        "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                        "useExisted": false,
                                        "mtManager": {
                                            "nextUI": 2,
                                            "list": [
                                                {
                                                    "un": "application/json",
                                                    "_ui": 1
                                                }
                                            ]
                                        },
                                        "reference": {
                                            "_ui": 0,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "${schema.un}_Response_${operation.un + path.suffix}",
                                            "script": {
                                                "_ui": 26,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "404",
                                        "_ui": 2,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 5,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "un": "/path/{id} +patch",
                "_ui": 5,
                "color": "",
                "description": "",
                "unPattern": "/${schema.snakeCase}/{id}",
                "suffix": "_1",
                "operationManager": {
                    "nextUI": 2,
                    "list": [
                        {
                            "un": "patch",
                            "_ui": 1,
                            "requestBody": {
                                "un": "",
                                "_ui": 0,
                                "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                "useExisted": false,
                                "mtManager": {
                                    "nextUI": 2,
                                    "list": [
                                        {
                                            "un": "application/json",
                                            "_ui": 1
                                        }
                                    ]
                                },
                                "reference": {
                                    "_ui": 0,
                                    "type": "requestBodies"
                                },
                                "schema": {
                                    "un": "",
                                    "_ui": 0,
                                    "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                    "script": {
                                        "_ui": 17,
                                        "type": "script"
                                    }
                                }
                            },
                            "statusManager": {
                                "nextUI": 6,
                                "list": [
                                    {
                                        "un": "200",
                                        "_ui": 1,
                                        "unPattern": "${schema.un}_${operation.un + path.suffix}",
                                        "useExisted": false,
                                        "mtManager": {
                                            "nextUI": 2,
                                            "list": [
                                                {
                                                    "un": "application/json",
                                                    "_ui": 1
                                                }
                                            ]
                                        },
                                        "reference": {
                                            "_ui": 0,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "${schema.un}_Response_${operation.un + path.suffix}",
                                            "script": {
                                                "_ui": 27,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "400",
                                        "_ui": 2,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 2,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "401",
                                        "_ui": 3,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 3,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "403",
                                        "_ui": 4,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 4,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    },
                                    {
                                        "un": "404",
                                        "_ui": 5,
                                        "unPattern": "",
                                        "useExisted": true,
                                        "mtManager": {
                                            "nextUI": 1,
                                            "list": []
                                        },
                                        "reference": {
                                            "_ui": 5,
                                            "type": "responses"
                                        },
                                        "schema": {
                                            "un": "",
                                            "_ui": 0,
                                            "unPattern": "",
                                            "script": {
                                                "_ui": 0,
                                                "type": "script"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        ]
    },
    "presetManager": {
        "nextUI": 8,
        "list": [
            {
                "un": "ContentType",
                "_ui": 1,
                "color": "",
                "description": "ContentType of Encodeing",
                "version": 1,
                "propertyManager": {
                    "nextUI": 13,
                    "list": [
                        {
                            "un": "application/javascript",
                            "_ui": 1,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "application/json",
                            "_ui": 2,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "application/octet-stream",
                            "_ui": 3,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "application/pdf",
                            "_ui": 4,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "application/xml",
                            "_ui": 5,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "application/zip",
                            "_ui": 6,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "image/*",
                            "_ui": 7,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "text/css",
                            "_ui": 8,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "text/csv",
                            "_ui": 9,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "text/html",
                            "_ui": 10,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "text/plain",
                            "_ui": 11,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "text/xml",
                            "_ui": 12,
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "un": "DataFormat",
                "_ui": 2,
                "color": "",
                "description": "format of Schema field",
                "version": 1,
                "propertyManager": {
                    "nextUI": 10,
                    "list": [
                        {
                            "un": "int32",
                            "_ui": 1,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "int64",
                            "_ui": 2,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "float",
                            "_ui": 3,
                            "tag": "number",
                            "value": ""
                        },
                        {
                            "un": "double",
                            "_ui": 4,
                            "tag": "number",
                            "value": ""
                        },
                        {
                            "un": "byte",
                            "_ui": 5,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "binary",
                            "_ui": 6,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "date",
                            "_ui": 7,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "date-time",
                            "_ui": 8,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "password",
                            "_ui": 9,
                            "tag": "string",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "un": "FieldName",
                "_ui": 3,
                "color": "",
                "description": "commonly used names",
                "version": 1,
                "propertyManager": {
                    "nextUI": 23,
                    "list": [
                        {
                            "un": "id",
                            "_ui": 1,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "content",
                            "_ui": 2,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "date",
                            "_ui": 3,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "datetime",
                            "_ui": 4,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "email",
                            "_ui": 5,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "image",
                            "_ui": 6,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "link",
                            "_ui": 7,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "message",
                            "_ui": 8,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "name",
                            "_ui": 9,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "parent_id",
                            "_ui": 10,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "password",
                            "_ui": 11,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "phone",
                            "_ui": 12,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "sort",
                            "_ui": 13,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "status",
                            "_ui": 14,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "text",
                            "_ui": 15,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "time",
                            "_ui": 16,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "title",
                            "_ui": 17,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "type",
                            "_ui": 18,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "uri",
                            "_ui": 19,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "url",
                            "_ui": 20,
                            "tag": "string",
                            "value": ""
                        },
                        {
                            "un": "user_id",
                            "_ui": 21,
                            "tag": "integer",
                            "value": ""
                        },
                        {
                            "un": "uuid",
                            "_ui": 22,
                            "tag": "string",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "un": "HttpStatus",
                "_ui": 4,
                "color": "",
                "description": "",
                "version": 1,
                "propertyManager": {
                    "nextUI": 9,
                    "list": [
                        {
                            "un": "200",
                            "_ui": 1,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "301",
                            "_ui": 2,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "302",
                            "_ui": 3,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "400",
                            "_ui": 4,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "401",
                            "_ui": 5,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "403",
                            "_ui": 6,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "404",
                            "_ui": 7,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "405",
                            "_ui": 8,
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "un": "MediaType",
                "_ui": 5,
                "color": "",
                "description": "MediaType of RequestBody / Response",
                "version": 1,
                "propertyManager": {
                    "nextUI": 6,
                    "list": [
                        {
                            "un": "application/json",
                            "_ui": 1,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "application/xml",
                            "_ui": 2,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "multipart/form-data",
                            "_ui": 3,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "text/plain",
                            "_ui": 4,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "*/*",
                            "_ui": 5,
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "un": "RequestBodyExcludeField",
                "_ui": 6,
                "color": "",
                "description": "field names will be excluded in RequestBody",
                "version": 1,
                "propertyManager": {
                    "nextUI": 3,
                    "list": [
                        {
                            "un": "id",
                            "_ui": 1,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "user_id",
                            "_ui": 2,
                            "tag": "",
                            "value": ""
                        }
                    ]
                }
            },
            {
                "un": "SchemaProperty",
                "_ui": 7,
                "color": "",
                "description": "",
                "version": 1,
                "propertyManager": {
                    "nextUI": 18,
                    "list": [
                        {
                            "un": "title",
                            "_ui": 1,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "maximum",
                            "_ui": 2,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "exclusiveMaximum",
                            "_ui": 3,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "minimum",
                            "_ui": 4,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "exclusiveMinimum",
                            "_ui": 5,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "maxLength",
                            "_ui": 6,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "minLength",
                            "_ui": 7,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "pattern",
                            "_ui": 8,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "maxItems",
                            "_ui": 9,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "minItems",
                            "_ui": 10,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "uniqueItems",
                            "_ui": 11,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "maxProperties",
                            "_ui": 12,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "minProperties",
                            "_ui": 13,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "enum",
                            "_ui": 14,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "not",
                            "_ui": 15,
                            "tag": "",
                            "value": ""
                        },
                        {
                            "un": "nullable",
                            "_ui": 16,
                            "tag": "",
                            "value": "true"
                        },
                        {
                            "un": "deprecated",
                            "_ui": 17,
                            "tag": "",
                            "value": "true"
                        }
                    ]
                }
            }
        ]
    },
    "scriptManager": {
        "nextUI": 100,
        "list": [
            {
                "un": "make Tag",
                "_ui": 1,
                "color": "",
                "description": "e.g. User",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    /**\n     * @param ui {number}\n     * @param uri {string}\n     */\n    function addTag(ui, uri) {\n        const path = dd.vendor.pathManager.findByUN(uri)\n        if (path === undefined) {\n            return\n        }\n\n        path.operationManager.list.forEach(item => {\n            if (item.tagManager.find(ui)) {\n                return\n            }\n            const one = item.tagManager.make(ui)\n            item.tagManager.add(one)\n        })\n    }\n\n    const tag = dd.vendor.tagManager.findOrMake(dd.schema.un)\n    addTag(tag.ui, '/' + dd.schema.snakeCase)\n    addTag(tag.ui, '/' + dd.schema.snakeCase + '/{id}')\n}",
                "global": false
            },
            {
                "un": "make Parameter",
                "_ui": 2,
                "color": "",
                "description": "e.g. user_id",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const parameter = dd.vendor.parameterManager.make(dd.schema.snakeCase + '_id')\n    dd.vendor.parameterManager.add(parameter)\n}",
                "global": false
            },
            {
                "un": "make Schema of RequestBody get",
                "_ui": 11,
                "color": "#f00",
                "description": "Schema is used in RequestBody get",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.red\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of RequestBody post",
                "_ui": 12,
                "color": "#f00",
                "description": "Schema is used in RequestBody post",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.red\n    schema.compositionType = 'allOf'\n\n    const source = schema.referenceManager.make(dd.schema.ui)\n    schema.referenceManager.add(source)\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of RequestBody delete",
                "_ui": 15,
                "color": "#f00",
                "description": "Schema is used in RequestBody delete",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.red\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of RequestBody get one",
                "_ui": 16,
                "color": "#f00",
                "description": "Schema is used in RequestBody get one",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.red\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of RequestBody patch",
                "_ui": 17,
                "color": "#f00",
                "description": "Schema is used in RequestBody patch",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.red\n    schema.compositionType = 'allOf'\n\n    const source = schema.referenceManager.make(dd.schema.ui)\n    schema.referenceManager.add(source)\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of Response get",
                "_ui": 21,
                "color": "#f0f",
                "description": "Schema is used in Response get",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n\n    const reference = schema.referenceManager.make(1)\n    schema.referenceManager.add(reference)\n\n    const field = dd.factory.makeSchemaField('data', schema)\n    field.refer(dd.schema.ui)\n    field.isArray = true\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of Response post",
                "_ui": 22,
                "color": "#f0f",
                "description": "Schema is used in Response post",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n\n    const reference = schema.referenceManager.make(1)\n    schema.referenceManager.add(reference)\n\n    const field = dd.factory.makeSchemaField('data', schema)\n    field.refer(dd.schema.ui)\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of Response delete",
                "_ui": 25,
                "color": "#f0f",
                "description": "Schema is used in Response delete",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n\n    const reference = schema.referenceManager.make(1)\n    schema.referenceManager.add(reference)\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of Response get one",
                "_ui": 26,
                "color": "#f0f",
                "description": "Schema is used in Response get one",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n\n    const reference = schema.referenceManager.make(1)\n    schema.referenceManager.add(reference)\n\n    const field = dd.factory.makeSchemaField('data', schema)\n    field.refer(dd.schema.ui)\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make Schema of Response patch",
                "_ui": 27,
                "color": "#f0f",
                "description": "Schema is used in Response patch",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.schemaManager.make(dd.un)\n    dd.vendor.schemaManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n\n    const reference = schema.referenceManager.make(1)\n    schema.referenceManager.add(reference)\n\n    const field = dd.factory.makeSchemaField('data', schema)\n    field.refer(dd.schema.ui)\n\n    return schema\n}",
                "global": false
            },
            {
                "un": "make RequestBody get many",
                "_ui": 31,
                "color": "#f80",
                "description": "e.g. for 'get /user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const rb = dd.vendor.requestBodyManager.make(dd.schema.un + '_get')\n    dd.vendor.requestBodyManager.add(rb)\n\n    const mt = dd.factory.makeMediaTypeJSON(rb.mediaTypeManager)\n    rb.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_get')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make RequestBody post",
                "_ui": 32,
                "color": "#f80",
                "description": "e.g. for 'post /user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const rb = dd.vendor.requestBodyManager.make(dd.schema.un + '_post')\n    dd.vendor.requestBodyManager.add(rb)\n\n    const mt = dd.factory.makeMediaTypeJSON(rb.mediaTypeManager)\n    rb.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_post')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make RequestBody delete",
                "_ui": 35,
                "color": "#f80",
                "description": "e.g. for 'delete /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const rb = dd.vendor.requestBodyManager.make(dd.schema.un + '_delete')\n    dd.vendor.requestBodyManager.add(rb)\n\n    const mt = dd.factory.makeMediaTypeJSON(rb.mediaTypeManager)\n    rb.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_delete')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make RequestBody get one",
                "_ui": 36,
                "color": "#f80",
                "description": "e.g. for 'get /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const rb = dd.vendor.requestBodyManager.make(dd.schema.un + '_get_1')\n    dd.vendor.requestBodyManager.add(rb)\n\n    const mt = dd.factory.makeMediaTypeJSON(rb.mediaTypeManager)\n    rb.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_get_1')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make RequestBody patch",
                "_ui": 37,
                "color": "#f80",
                "description": "e.g. for 'patch /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const rb = dd.vendor.requestBodyManager.make(dd.schema.un + '_patch')\n    dd.vendor.requestBodyManager.add(rb)\n\n    const mt = dd.factory.makeMediaTypeJSON(rb.mediaTypeManager)\n    rb.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_patch')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Response get many",
                "_ui": 41,
                "color": "#ff0",
                "description": "e.g. for 'get /user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const response = dd.vendor.responseManager.make(dd.schema.un + '_get')\n    dd.vendor.responseManager.add(response)\n\n    const mt = dd.factory.makeMediaTypeJSON(response.mediaTypeManager)\n    response.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_Response_get')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Response post",
                "_ui": 42,
                "color": "#ff0",
                "description": "e.g. for 'post /user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const response = dd.vendor.responseManager.make(dd.schema.un + '_post')\n    dd.vendor.responseManager.add(response)\n\n    const mt = dd.factory.makeMediaTypeJSON(response.mediaTypeManager)\n    response.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_Response_post')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Response delete",
                "_ui": 45,
                "color": "#ff0",
                "description": "e.g. for 'delete /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const response = dd.vendor.responseManager.make(dd.schema.un + '_delete')\n    dd.vendor.responseManager.add(response)\n\n    const mt = dd.factory.makeMediaTypeJSON(response.mediaTypeManager)\n    response.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_Response_delete')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Response get one",
                "_ui": 46,
                "color": "#ff0",
                "description": "e.g. for 'get /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const response = dd.vendor.responseManager.make(dd.schema.un + '_get_1')\n    dd.vendor.responseManager.add(response)\n\n    const mt = dd.factory.makeMediaTypeJSON(response.mediaTypeManager)\n    response.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_Response_get_1')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Response patch",
                "_ui": 47,
                "color": "#ff0",
                "description": "e.g. for 'patch /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const response = dd.vendor.responseManager.make(dd.schema.un + '_patch')\n    dd.vendor.responseManager.add(response)\n\n    const mt = dd.factory.makeMediaTypeJSON(response.mediaTypeManager)\n    response.mediaTypeManager.add(mt)\n\n    const schema = dd.vendor.schemaManager.findByUN(dd.schema.un + '_Response_patch')\n    if (schema) {\n        mt.schema.ui = schema.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Path",
                "_ui": 51,
                "color": "#0f0",
                "description": "e.g. '/user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const path = dd.vendor.pathManager.make('/' + dd.schema.snakeCase)\n    dd.vendor.pathManager.add(path)\n}",
                "global": false
            },
            {
                "un": "make Path with id",
                "_ui": 52,
                "color": "#0f0",
                "description": "e.g. '/user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const path = dd.vendor.pathManager.make('/' + dd.schema.snakeCase + '/{id}')\n    dd.vendor.pathManager.add(path)\n\n    const parameter = path.parameterManager.make(1)\n    path.parameterManager.add(parameter)\n}",
                "global": false
            },
            {
                "un": "make Operation get many",
                "_ui": 61,
                "color": "#0ff",
                "description": "e.g. 'get /user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const uri = '/' + dd.schema.snakeCase\n    const path = dd.vendor.pathManager.findByUN(uri)\n    if (path === undefined) {\n        throw new Error(`Path ${uri} not found`)\n    }\n\n    const operation = path.operationManager.make('get')\n    path.operationManager.add(operation)\n\n    const status = operation.statusManager.make('200')\n    operation.statusManager.add(status)\n    const response = dd.vendor.responseManager.findByUN(dd.schema.un + '_get')\n    if (response) {\n        status.reference.ui = response.ui\n    }\n}",
                "global": false
            },
            {
                "un": "make Operation post",
                "_ui": 62,
                "color": "#0ff",
                "description": "e.g. 'post /user'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const uri = '/' + dd.schema.snakeCase\n    const path = dd.vendor.pathManager.findByUN(uri)\n    if (path === undefined) {\n        throw new Error(`Path ${uri} not found`)\n    }\n\n    const operation = path.operationManager.make('post')\n    path.operationManager.add(operation)\n    const request = dd.vendor.requestBodyManager.findByUN(dd.schema.un + '_post')\n    if (request) {\n        operation.requestBody.ui = request.ui\n    }\n\n    const ok = operation.statusManager.make('200')\n    operation.statusManager.add(ok)\n    const response = dd.vendor.responseManager.findByUN(dd.schema.un + '_get_1')\n    if (response) {\n        ok.reference.ui = response.ui\n    }\n\n    const error = operation.statusManager.make('403')\n    operation.statusManager.add(error)\n    error.reference.ui = 1\n}",
                "global": false
            },
            {
                "un": "make Operation delete",
                "_ui": 65,
                "color": "#0ff",
                "description": "e.g. 'delete /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const uri = '/' + dd.schema.snakeCase + '/{id}'\n    const path = dd.vendor.pathManager.findByUN(uri)\n    if (path === undefined) {\n        throw new Error(`Path ${uri} not found`)\n    }\n\n    const operation = path.operationManager.make('delete')\n    path.operationManager.add(operation)\n\n    const ok = operation.statusManager.make('200')\n    operation.statusManager.add(ok)\n    ok.reference.ui = 1\n\n    const error = operation.statusManager.make('403')\n    operation.statusManager.add(error)\n    error.reference.ui = 1\n}",
                "global": false
            },
            {
                "un": "make Operation get one",
                "_ui": 66,
                "color": "#0ff",
                "description": "e.g. 'get /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const uri = '/' + dd.schema.snakeCase + '/{id}'\n    const path = dd.vendor.pathManager.findByUN(uri)\n    if (path === undefined) {\n        throw new Error(`Path ${uri} not found`)\n    }\n\n    const operation = path.operationManager.make('get')\n    path.operationManager.add(operation)\n\n    const ok = operation.statusManager.make('200')\n    operation.statusManager.add(ok)\n    const response = dd.vendor.responseManager.findByUN(dd.schema.un + '_get_1')\n    if (response) {\n        ok.reference.ui = response.ui\n    }\n\n    const error = operation.statusManager.make('404')\n    operation.statusManager.add(error)\n    error.reference.ui = 1\n}",
                "global": false
            },
            {
                "un": "make Operation patch",
                "_ui": 67,
                "color": "#0ff",
                "description": "e.g. 'patch /user/{id}'",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const uri = '/' + dd.schema.snakeCase + '/{id}'\n    const path = dd.vendor.pathManager.findByUN(uri)\n    if (path === undefined) {\n        throw new Error(`Path ${uri} not found`)\n    }\n\n    const operation = path.operationManager.make('patch')\n    path.operationManager.add(operation)\n    const request = dd.vendor.requestBodyManager.findByUN(dd.schema.un + '_patch')\n    if (request) {\n        operation.requestBody.ui = request.ui\n    }\n\n    const ok = operation.statusManager.make('200')\n    operation.statusManager.add(ok)\n    const response = dd.vendor.responseManager.findByUN(dd.schema.un + '_get_1')\n    if (response) {\n        ok.reference.ui = response.ui\n    }\n\n    const error = operation.statusManager.make('403')\n    operation.statusManager.add(error)\n    error.reference.ui = 1\n}",
                "global": false
            },
            {
                "un": "make SecurityScheme",
                "_ui": 70,
                "color": "#00f",
                "description": "e.g. user",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const item = dd.vendor.securityScheme.make(dd.schema.snakeCase)\n    dd.vendor.securityScheme.add(item)\n}",
                "global": false
            },
            {
                "un": "make OAuthFlow authorizationCode",
                "_ui": 71,
                "color": "#00f",
                "description": "",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const found = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (found === undefined) {\n        throw new Error(`SecurityScheme ${dd.schema.snakeCase} not found`)\n    }\n    const flow = found.oAuthFlowManager.make('authorizationCode')\n    found.oAuthFlowManager.add(flow)\n}",
                "global": false
            },
            {
                "un": "make OAuthFlow clientCredentials",
                "_ui": 72,
                "color": "#00f",
                "description": "",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const found = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (found === undefined) {\n        throw new Error(`SecurityScheme ${dd.schema.snakeCase} not found`)\n    }\n    const flow = found.oAuthFlowManager.make('clientCredentials')\n    found.oAuthFlowManager.add(flow)\n}",
                "global": false
            },
            {
                "un": "make OAuthFlow implicit",
                "_ui": 73,
                "color": "#00f",
                "description": "",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const found = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (found === undefined) {\n        throw new Error(`SecurityScheme ${dd.schema.snakeCase} not found`)\n    }\n    const flow = found.oAuthFlowManager.make('implicit')\n    found.oAuthFlowManager.add(flow)\n}",
                "global": false
            },
            {
                "un": "make OAuthFlow password",
                "_ui": 74,
                "color": "#00f",
                "description": "",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const found = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (found === undefined) {\n        throw new Error(`SecurityScheme ${dd.schema.snakeCase} not found`)\n    }\n    const flow = found.oAuthFlowManager.make('password')\n    found.oAuthFlowManager.add(flow)\n}",
                "global": false
            },
            {
                "un": "make SecurityScope list",
                "_ui": 75,
                "color": "#00f",
                "description": "e.g. list:user",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const scope = dd.vendor.scopeManager.make('list:' + dd.schema.snakeCase)\n    dd.vendor.scopeManager.add(scope)\n\n    const item = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (item) {\n        item.oAuthFlowManager.addToAll(scope.ui)\n    }\n}",
                "global": false
            },
            {
                "un": "make SecurityScope create",
                "_ui": 76,
                "color": "#00f",
                "description": "e.g. create:user",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const scope = dd.vendor.scopeManager.make('create:' + dd.schema.snakeCase)\n    dd.vendor.scopeManager.add(scope)\n\n    const item = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (item) {\n        item.oAuthFlowManager.addToAll(scope.ui)\n    }\n}",
                "global": false
            },
            {
                "un": "make SecurityScope delete",
                "_ui": 77,
                "color": "#00f",
                "description": "e.g. delete:user",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const scope = dd.vendor.scopeManager.make('delete:' + dd.schema.snakeCase)\n    dd.vendor.scopeManager.add(scope)\n\n    const item = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (item) {\n        item.oAuthFlowManager.addToAll(scope.ui)\n    }\n}",
                "global": false
            },
            {
                "un": "make SecurityScope read",
                "_ui": 78,
                "color": "#00f",
                "description": "e.g. read:user",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const scope = dd.vendor.scopeManager.make('read:' + dd.schema.snakeCase)\n    dd.vendor.scopeManager.add(scope)\n\n    const item = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (item) {\n        item.oAuthFlowManager.addToAll(scope.ui)\n    }\n}",
                "global": false
            },
            {
                "un": "make SecurityScope write",
                "_ui": 79,
                "color": "#00f",
                "description": "e.g. write:user",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const scope = dd.vendor.scopeManager.make('write:' + dd.schema.snakeCase)\n    dd.vendor.scopeManager.add(scope)\n\n    const item = dd.vendor.securityScheme.findByUN(dd.schema.snakeCase)\n    if (item) {\n        item.oAuthFlowManager.addToAll(scope.ui)\n    }\n}",
                "global": false
            },
            {
                "un": "make Example of RequestBody get many",
                "_ui": 81,
                "color": "#08f",
                "description": "Example is used in RequestBody get many",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_get')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.red\n}",
                "global": false
            },
            {
                "un": "make Example of RequestBody post",
                "_ui": 82,
                "color": "#08f",
                "description": "Example is used in RequestBody post",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_post')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.red\n}",
                "global": false
            },
            {
                "un": "make Example of RequestBody delete",
                "_ui": 85,
                "color": "#08f",
                "description": "Example is used in RequestBody delete",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_delete')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.red\n}",
                "global": false
            },
            {
                "un": "make Example of RequestBody get one",
                "_ui": 86,
                "color": "#08f",
                "description": "Example is used in RequestBody get one",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_get_1')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.red\n}",
                "global": false
            },
            {
                "un": "make Example of RequestBody patch",
                "_ui": 87,
                "color": "#08f",
                "description": "Example is used in RequestBody patch",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_patch')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.red\n}",
                "global": false
            },
            {
                "un": "make Example of Response get many",
                "_ui": 91,
                "color": "#80f",
                "description": "Example is used in Response get many",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_Response_get')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n}",
                "global": false
            },
            {
                "un": "make Example of Response post",
                "_ui": 92,
                "color": "#80f",
                "description": "Example is used in Response post",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_Response_post')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n}",
                "global": false
            },
            {
                "un": "make Example of Response delete",
                "_ui": 95,
                "color": "#80f",
                "description": "Example is used in Response delete",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_Response_delete')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n}",
                "global": false
            },
            {
                "un": "make Example of Response get one",
                "_ui": 96,
                "color": "#80f",
                "description": "Example is used in Response get one",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_Response_get_1')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n}",
                "global": false
            },
            {
                "un": "make Example of Response patch",
                "_ui": 97,
                "color": "#80f",
                "description": "Example is used in Response patch",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n\n    const schema = dd.vendor.exampleManager.make(dd.schema.un + '_Response_patch')\n    dd.vendor.exampleManager.add(schema)\n    schema.color = dd.ColorEnum.magenta\n}",
                "global": false
            },
            {
                "un": "log",
                "_ui": 99,
                "color": "",
                "description": "",
                "code": "function run(data) {\n    /** @type {DataForScript} */\n    const dd = data\n    console.log(JSON.stringify(data.project))\n}",
                "global": true
            }
        ]
    },
    "templateManager": {
        "nextUI": 1,
        "list": []
    },
    "oapi": {
        "component": {
            "callbackManager": {
                "nextUI": 1,
                "list": []
            },
            "exampleManager": {
                "nextUI": 2,
                "list": [
                    {
                        "un": "Response",
                        "_ui": 1,
                        "color": "",
                        "description": "",
                        "externalValue": "",
                        "summary": "",
                        "value": {
                            "value": {
                                "code": 0,
                                "message": "ok"
                            }
                        }
                    }
                ]
            },
            "headerManager": {
                "nextUI": 3,
                "list": [
                    {
                        "un": "X-Rate-Limit",
                        "_ui": 1,
                        "color": "",
                        "description": "",
                        "allowEmptyValue": false,
                        "deprecated": false,
                        "example": "",
                        "name": "",
                        "required": true,
                        "schema": {
                            "un": "X-Rate-Limit",
                            "_ui": 0,
                            "description": "",
                            "format": "int32",
                            "isArray": false,
                            "readOnly": false,
                            "required": true,
                            "schemaUI": 0,
                            "_type": "integer",
                            "writeOnly": false,
                            "reference": {
                                "_ui": 0,
                                "type": "schemas"
                            }
                        },
                        "location": "header"
                    },
                    {
                        "un": "X-Expires-After",
                        "_ui": 2,
                        "color": "",
                        "description": "",
                        "allowEmptyValue": false,
                        "deprecated": false,
                        "example": "",
                        "name": "",
                        "required": true,
                        "schema": {
                            "un": "X-Expires-After",
                            "_ui": 0,
                            "description": "",
                            "format": "date-time",
                            "isArray": false,
                            "readOnly": false,
                            "required": true,
                            "schemaUI": 0,
                            "_type": "string",
                            "writeOnly": false,
                            "reference": {
                                "_ui": 0,
                                "type": "schemas"
                            }
                        },
                        "location": "header"
                    }
                ]
            },
            "linkManager": {
                "nextUI": 1,
                "list": []
            },
            "parameterManager": {
                "nextUI": 5,
                "list": [
                    {
                        "un": "id",
                        "_ui": 1,
                        "color": "",
                        "description": "",
                        "allowEmptyValue": false,
                        "deprecated": false,
                        "example": "",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "un": "id",
                            "_ui": 0,
                            "description": "",
                            "format": "",
                            "isArray": false,
                            "readOnly": false,
                            "required": true,
                            "schemaUI": 0,
                            "_type": "integer",
                            "writeOnly": false,
                            "reference": {
                                "_ui": 0,
                                "type": "schemas"
                            }
                        },
                        "location": "path"
                    },
                    {
                        "un": "id-",
                        "_ui": 2,
                        "color": "",
                        "description": "",
                        "allowEmptyValue": false,
                        "deprecated": false,
                        "example": "",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "un": "id-",
                            "_ui": 0,
                            "description": "",
                            "format": "",
                            "isArray": false,
                            "readOnly": false,
                            "required": true,
                            "schemaUI": 0,
                            "_type": "integer",
                            "writeOnly": false,
                            "reference": {
                                "_ui": 0,
                                "type": "schemas"
                            }
                        },
                        "location": "query"
                    },
                    {
                        "un": "page",
                        "_ui": 3,
                        "color": "",
                        "description": "",
                        "allowEmptyValue": false,
                        "deprecated": false,
                        "example": "",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "un": "page",
                            "_ui": 0,
                            "description": "",
                            "format": "",
                            "isArray": false,
                            "readOnly": false,
                            "required": true,
                            "schemaUI": 0,
                            "_type": "integer",
                            "writeOnly": false,
                            "reference": {
                                "_ui": 0,
                                "type": "schemas"
                            }
                        },
                        "location": "path"
                    },
                    {
                        "un": "page-",
                        "_ui": 4,
                        "color": "",
                        "description": "",
                        "allowEmptyValue": false,
                        "deprecated": false,
                        "example": "",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "un": "page-",
                            "_ui": 0,
                            "description": "",
                            "format": "",
                            "isArray": false,
                            "readOnly": false,
                            "required": true,
                            "schemaUI": 0,
                            "_type": "integer",
                            "writeOnly": false,
                            "reference": {
                                "_ui": 0,
                                "type": "schemas"
                            }
                        },
                        "location": "query"
                    }
                ]
            },
            "requestBodyManager": {
                "nextUI": 1,
                "list": []
            },
            "responseManager": {
                "nextUI": 7,
                "list": [
                    {
                        "un": "Response",
                        "_ui": 1,
                        "color": "",
                        "description": "",
                        "headerManager": {
                            "list": []
                        },
                        "linkManager": {
                            "list": []
                        },
                        "mediaTypeManager": {
                            "nextUI": 2,
                            "list": [
                                {
                                    "un": "application/json",
                                    "_ui": 1,
                                    "example": {
                                        "value": {}
                                    },
                                    "schema": {
                                        "_ui": 1,
                                        "type": "schemas"
                                    },
                                    "exampleManager": {
                                        "list": [
                                            {
                                                "_ui": 1,
                                                "type": "examples"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "un": "Response400",
                        "_ui": 2,
                        "color": "",
                        "description": "",
                        "headerManager": {
                            "list": []
                        },
                        "linkManager": {
                            "list": []
                        },
                        "mediaTypeManager": {
                            "nextUI": 2,
                            "list": [
                                {
                                    "un": "application/json",
                                    "_ui": 1,
                                    "example": {
                                        "value": {
                                            "code": 400,
                                            "message": "Bad Request"
                                        }
                                    },
                                    "schema": {
                                        "_ui": 1,
                                        "type": "schemas"
                                    },
                                    "exampleManager": {
                                        "list": []
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "un": "Response401",
                        "_ui": 3,
                        "color": "",
                        "description": "",
                        "headerManager": {
                            "list": []
                        },
                        "linkManager": {
                            "list": []
                        },
                        "mediaTypeManager": {
                            "nextUI": 2,
                            "list": [
                                {
                                    "un": "application/json",
                                    "_ui": 1,
                                    "example": {
                                        "value": {
                                            "code": 401,
                                            "message": "Unauthorized"
                                        }
                                    },
                                    "schema": {
                                        "_ui": 1,
                                        "type": "schemas"
                                    },
                                    "exampleManager": {
                                        "list": []
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "un": "Response403",
                        "_ui": 4,
                        "color": "",
                        "description": "",
                        "headerManager": {
                            "list": []
                        },
                        "linkManager": {
                            "list": []
                        },
                        "mediaTypeManager": {
                            "nextUI": 2,
                            "list": [
                                {
                                    "un": "application/json",
                                    "_ui": 1,
                                    "example": {
                                        "value": {
                                            "code": 403,
                                            "message": "Forbidden"
                                        }
                                    },
                                    "schema": {
                                        "_ui": 1,
                                        "type": "schemas"
                                    },
                                    "exampleManager": {
                                        "list": []
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "un": "Response404",
                        "_ui": 5,
                        "color": "",
                        "description": "",
                        "headerManager": {
                            "list": []
                        },
                        "linkManager": {
                            "list": []
                        },
                        "mediaTypeManager": {
                            "nextUI": 2,
                            "list": [
                                {
                                    "un": "application/json",
                                    "_ui": 1,
                                    "example": {
                                        "value": {
                                            "code": 404,
                                            "message": "Not Found"
                                        }
                                    },
                                    "schema": {
                                        "_ui": 1,
                                        "type": "schemas"
                                    },
                                    "exampleManager": {
                                        "list": []
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "un": "Response405",
                        "_ui": 6,
                        "color": "",
                        "description": "",
                        "headerManager": {
                            "list": []
                        },
                        "linkManager": {
                            "list": []
                        },
                        "mediaTypeManager": {
                            "nextUI": 2,
                            "list": [
                                {
                                    "un": "application/json",
                                    "_ui": 1,
                                    "example": {
                                        "value": {
                                            "code": 405,
                                            "message": "Method Not Allowed"
                                        }
                                    },
                                    "schema": {
                                        "_ui": 1,
                                        "type": "schemas"
                                    },
                                    "exampleManager": {
                                        "list": []
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "schemaManager": {
                "nextUI": 3,
                "list": [
                    {
                        "un": "Response",
                        "_ui": 1,
                        "color": "",
                        "description": "",
                        "compositionType": "allOf",
                        "isTemplate": false,
                        "discriminator": {
                            "propertyName": "",
                            "referenceManager": {
                                "nextUI": 1,
                                "list": []
                            }
                        },
                        "example": {
                            "value": {}
                        },
                        "excludedManager": {
                            "list": []
                        },
                        "flowManager": {
                            "list": []
                        },
                        "referenceManager": {
                            "list": []
                        },
                        "requiredManager": {
                            "list": []
                        },
                        "text": {
                            "value": {}
                        }
                    },
                    {
                        "un": "User",
                        "_ui": 2,
                        "color": "",
                        "description": "",
                        "compositionType": "allOf",
                        "isTemplate": false,
                        "discriminator": {
                            "propertyName": "",
                            "referenceManager": {
                                "nextUI": 1,
                                "list": []
                            }
                        },
                        "example": {
                            "value": {}
                        },
                        "excludedManager": {
                            "list": []
                        },
                        "flowManager": {
                            "list": []
                        },
                        "referenceManager": {
                            "list": []
                        },
                        "requiredManager": {
                            "list": []
                        },
                        "text": {
                            "value": {}
                        }
                    }
                ]
            },
            "securitySchemeManager": {
                "nextUI": 1,
                "list": []
            }
        },
        "encodingManager": {
            "nextUI": 2,
            "list": [
                {
                    "un": "image",
                    "_ui": 1,
                    "allowReserved": false,
                    "contentType": "image/*",
                    "explode": false,
                    "headerManager": {
                        "list": []
                    },
                    "style": ""
                }
            ]
        },
        "enumerManager": {
            "nextUI": 1,
            "list": []
        },
        "externalDocs": {
            "description": "",
            "url": ""
        },
        "fieldManager": {
            "nextUI": 7,
            "list": [
                {
                    "un": "code",
                    "_ui": 1,
                    "description": "",
                    "format": "",
                    "isArray": false,
                    "readOnly": false,
                    "required": true,
                    "schemaUI": 1,
                    "_type": "integer",
                    "writeOnly": false,
                    "reference": {
                        "_ui": 0,
                        "type": "schemas"
                    }
                },
                {
                    "un": "message",
                    "_ui": 2,
                    "description": "",
                    "format": "",
                    "isArray": false,
                    "readOnly": false,
                    "required": true,
                    "schemaUI": 1,
                    "_type": "string",
                    "writeOnly": false,
                    "reference": {
                        "_ui": 0,
                        "type": "schemas"
                    }
                },
                {
                    "un": "id",
                    "_ui": 3,
                    "description": "",
                    "format": "",
                    "isArray": false,
                    "readOnly": true,
                    "required": true,
                    "schemaUI": 2,
                    "_type": "integer",
                    "writeOnly": false,
                    "reference": {
                        "_ui": 0,
                        "type": "schemas"
                    }
                },
                {
                    "un": "email",
                    "_ui": 4,
                    "description": "",
                    "format": "",
                    "isArray": false,
                    "readOnly": false,
                    "required": true,
                    "schemaUI": 2,
                    "_type": "string",
                    "writeOnly": false,
                    "reference": {
                        "_ui": 0,
                        "type": "schemas"
                    }
                },
                {
                    "un": "name",
                    "_ui": 5,
                    "description": "",
                    "format": "",
                    "isArray": false,
                    "readOnly": false,
                    "required": true,
                    "schemaUI": 2,
                    "_type": "string",
                    "writeOnly": false,
                    "reference": {
                        "_ui": 0,
                        "type": "schemas"
                    }
                },
                {
                    "un": "password",
                    "_ui": 6,
                    "description": "",
                    "format": "password",
                    "isArray": false,
                    "readOnly": false,
                    "required": true,
                    "schemaUI": 2,
                    "_type": "string",
                    "writeOnly": true,
                    "reference": {
                        "_ui": 0,
                        "type": "schemas"
                    }
                }
            ]
        },
        "info": {
            "contact": {
                "name": "contact",
                "url": "",
                "email": ""
            },
            "description": "description",
            "license": {
                "name": "license",
                "url": ""
            },
            "termsOfService": "",
            "title": "title",
            "version": "0.1.0"
        },
        "pathManager": {
            "nextUI": 1,
            "list": []
        },
        "scopeManager": {
            "nextUI": 1,
            "list": []
        },
        "securityManager": {
            "list": []
        },
        "serverManager": {
            "nextUI": 2,
            "list": [
                {
                    "un": "http://localhost/{version}",
                    "_ui": 1,
                    "color": "",
                    "description": "",
                    "referenceManager": {
                        "list": [
                            {
                                "_ui": 1,
                                "type": "variable"
                            }
                        ]
                    }
                }
            ]
        },
        "serverVariableManager": {
            "nextUI": 2,
            "list": [
                {
                    "un": "version",
                    "_ui": 1,
                    "color": "",
                    "description": "",
                    "default": "v2",
                    "valueManager": {
                        "nextUI": 3,
                        "list": [
                            {
                                "un": "v1",
                                "_ui": 1
                            },
                            {
                                "un": "v2",
                                "_ui": 2
                            }
                        ]
                    }
                }
            ]
        },
        "tagManager": {
            "nextUI": 2,
            "list": [
                {
                    "un": "User",
                    "_ui": 1,
                    "color": "",
                    "description": ""
                }
            ]
        }
    }
}